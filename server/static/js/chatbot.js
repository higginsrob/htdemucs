// Demucs Chatbot - Static Knowledge Base
// This chatbot helps users understand how to use the Demucs web app

class DemucsChatbot {
    constructor() {
        this.knowledgeBase = this.initializeKnowledgeBase();
        this.chatHistory = [];
        this.isOpen = false;
    }

    initializeKnowledgeBase() {
        return [
            // ===== GETTING STARTED =====
            {
                keywords: ['hello', 'hi', 'hey', 'start', 'help', 'how'],
                question: "Hello! How can I help you?",
                answer: "üëã Hi! I'm here to help you use Demucs to separate audio into different stems (vocals, bass, drums, etc.). You can:\n\n‚Ä¢ Upload audio files or paste YouTube URLs\n‚Ä¢ Choose different quality models\n‚Ä¢ Monitor processing progress\n‚Ä¢ Play separated tracks with a mixer\n\nWhat would you like to know more about?"
            },
            {
                keywords: ['what is', 'demucs', 'what does'],
                question: "What is Demucs?",
                answer: "üéµ Demucs is an AI-powered music source separation tool developed by Facebook Research. It uses deep learning to split a song into separate tracks:\n\n‚Ä¢ üé§ **Vocals** - singing/voice\n‚Ä¢ üé∏ **Bass** - bass guitar/bass sounds\n‚Ä¢ ü•Å **Drums** - percussion/drums\n‚Ä¢ üéπ **Other** - everything else (piano, guitars, synths, etc.)\n‚Ä¢ üé∏ **Guitar** + üéπ **Piano** (in 6-stem models)\n\nThis is perfect for creating karaoke tracks, remixes, or practicing with isolated instruments!"
            },
            {
                keywords: ['getting started', 'begin', 'first time', 'new user'],
                question: "How do I get started?",
                answer: "üöÄ Getting started is easy!\n\n**Step 1:** Go to the 'Add' view (the first tab)\n**Step 2:** Choose your input source:\n   ‚Ä¢ Upload an audio file (MP3, WAV, FLAC, etc.)\n   ‚Ä¢ Paste a YouTube URL\n**Step 3:** Select your options (model quality, output format)\n**Step 4:** Click 'Separate Stems'\n**Step 5:** Monitor progress in the 'Monitor' view\n**Step 6:** Download or play your separated stems!\n\nThat's it! The process typically takes 2-5 minutes per song."
            },

            // ===== FILE UPLOAD & INPUT =====
            {
                keywords: ['upload', 'file', 'audio file', 'how to upload'],
                question: "How do I upload an audio file?",
                answer: "üìÅ To upload an audio file:\n\n1. Click the 'Add' view tab\n2. Make sure 'Upload File' is selected\n3. Click the file selector or drag & drop\n4. Choose your audio file (max 100MB)\n5. Select your processing options\n6. Click 'Separate Stems'\n\n**Supported formats:** MP3, WAV, FLAC, M4A, OGG, Opus\n**Max file size:** 100MB"
            },
            {
                keywords: ['youtube', 'url', 'youtube url', 'video'],
                question: "Can I use YouTube videos?",
                answer: "‚ñ∂Ô∏è Yes! YouTube support is built-in:\n\n1. Click 'YouTube URL' in the Add view\n2. Paste the YouTube video or playlist URL\n3. The audio will be automatically downloaded\n4. Processing starts automatically\n\n**Features:**\n‚Ä¢ Single videos supported\n‚Ä¢ Full playlist processing (queued)\n‚Ä¢ Videos over 10 minutes are skipped\n‚Ä¢ Metadata (title, artist, thumbnail) preserved\n\n**Note:** Only the audio is processed, not video."
            },
            {
                keywords: ['playlist', 'multiple videos', 'batch'],
                question: "Can I process YouTube playlists?",
                answer: "üìã Absolutely! Playlist support is included:\n\n1. Paste a YouTube playlist URL\n2. All videos are added to the queue\n3. They process one at a time (FIFO)\n4. Videos over 10 minutes are automatically skipped\n5. Each video appears in your Library when complete\n\n**Tip:** Use the Monitor view to watch progress on all queued videos!"
            },
            {
                keywords: ['supported formats', 'file types', 'what formats'],
                question: "What file formats are supported?",
                answer: "üéµ **Supported Input Formats:**\n‚Ä¢ MP3 (most common)\n‚Ä¢ WAV (uncompressed)\n‚Ä¢ FLAC (lossless)\n‚Ä¢ M4A (Apple/AAC)\n‚Ä¢ OGG/Vorbis\n‚Ä¢ Opus\n\n**Output Formats (you choose):**\n‚Ä¢ MP3 (320 kbps) - smaller files\n‚Ä¢ WAV (44.1kHz, 16-bit) - highest quality\n\n**Max file size:** 100MB for uploads"
            },
            {
                keywords: ['file size', 'too large', 'size limit', 'max size'],
                question: "What's the maximum file size?",
                answer: "üìè **File Size Limits:**\n\n‚Ä¢ **Uploads:** 100MB maximum\n‚Ä¢ **YouTube:** No limit (downloads automatically)\n‚Ä¢ **Duration:** No strict limit, but longer songs take more time\n\n**Tips for large files:**\n‚Ä¢ Use YouTube URL instead of uploading\n‚Ä¢ Compress your audio before uploading\n‚Ä¢ Songs over 10 minutes may be slower to process"
            },

            // ===== MODELS & QUALITY =====
            {
                keywords: ['model', 'models', 'which model', 'quality'],
                question: "Which model should I use?",
                answer: "üéØ **Model Comparison:**\n\n**Fast Processing (mdx_extra):**\n‚Ä¢ Fastest processing time\n‚Ä¢ Good quality for most songs\n‚Ä¢ Best for quick jobs\n\n**Standard Quality (htdemucs):**\n‚Ä¢ Balanced speed and quality\n‚Ä¢ Default choice\n‚Ä¢ Great for most use cases\n\n**High Quality (htdemucs_ft) ‚≠ê RECOMMENDED:**\n‚Ä¢ Best separation quality\n‚Ä¢ 4x slower than standard\n‚Ä¢ Perfect for important projects\n\n**6 Stems (htdemucs_6s):**\n‚Ä¢ Separates Guitar + Piano too\n‚Ä¢ Piano separation not perfect yet\n‚Ä¢ Experimental feature"
            },
            {
                keywords: ['best quality', 'highest quality', 'recommended'],
                question: "Which model gives the best quality?",
                answer: "‚≠ê **htdemucs_ft (High Quality)** is the best!\n\n**Why it's recommended:**\n‚Ä¢ Fine-tuned for superior separation\n‚Ä¢ Fewer artifacts and bleed-through\n‚Ä¢ Best vocal isolation\n‚Ä¢ Trained on 800+ songs\n\n**Trade-off:**\n‚Ä¢ Takes 4x longer to process\n‚Ä¢ Worth it for important projects\n\n**For most users:** Start with 'Standard Quality' and upgrade to 'High Quality' if you need better results."
            },
            {
                keywords: ['6 stems', 'guitar', 'piano', 'six stems'],
                question: "What is the 6-stem model?",
                answer: "üé∏ The **6-Stem Model (htdemucs_6s)** separates:\n\n1. üé§ Vocals\n2. üé∏ Bass\n3. ü•Å Drums\n4. üéπ Other\n5. üé∏ **Guitar** (NEW)\n6. üéπ **Piano** (NEW)\n\n**Note:** Guitar separation is decent, but piano separation is experimental and not always accurate.\n\n**When to use:**\n‚Ä¢ You specifically need isolated guitar\n‚Ä¢ You want to experiment with piano\n‚Ä¢ You're willing to accept lower accuracy\n\n**When NOT to use:**\n‚Ä¢ You need reliable piano isolation\n‚Ä¢ You want the fastest/best results"
            },
            {
                keywords: ['fast', 'fastest', 'quick', 'speed'],
                question: "Which model is fastest?",
                answer: "‚ö° **Fast Processing (mdx_extra)** is the fastest!\n\n**Speed comparison:**\n‚Ä¢ **mdx_extra:** ~1-2 minutes per song\n‚Ä¢ **htdemucs:** ~2-3 minutes per song\n‚Ä¢ **htdemucs_ft:** ~8-12 minutes per song\n\n**Good for:**\n‚Ä¢ Testing/experimenting\n‚Ä¢ Quick previews\n‚Ä¢ Batch processing many songs\n\n**Trade-off:** Slightly lower quality than the other models, but still very good!"
            },

            // ===== OUTPUT & STEMS =====
            {
                keywords: ['stems', 'what are stems', 'tracks'],
                question: "What are stems?",
                answer: "üéº **Stems** are the individual audio tracks that make up a song:\n\n‚Ä¢ üé§ **Vocals** - all singing/voice\n‚Ä¢ üé∏ **Bass** - bass guitar/bass frequencies\n‚Ä¢ ü•Å **Drums** - all percussion/drums\n‚Ä¢ üéπ **Other** - everything else (guitar, piano, synths, strings, etc.)\n\n**Example:** If you extract stems from a rock song, you'll get:\n- One file with just the vocals\n- One file with just the bass line\n- One file with just the drums\n- One file with all the other instruments\n\n**Why it's useful:**\n‚Ä¢ Create karaoke tracks (remove vocals)\n‚Ä¢ Make remixes\n‚Ä¢ Practice with isolated instruments\n‚Ä¢ Study song arrangements"
            },
            {
                keywords: ['mp3', 'wav', 'output format', 'format'],
                question: "Should I choose MP3 or WAV output?",
                answer: "üíæ **MP3 vs WAV:**\n\n**MP3 (320 kbps)** ‚úì Recommended\n‚Ä¢ Smaller file sizes (10-20MB per stem)\n‚Ä¢ Fast downloads\n‚Ä¢ High quality\n‚Ä¢ Compatible with everything\n‚Ä¢ **Best for:** Most users\n\n**WAV (uncompressed)**\n‚Ä¢ Larger files (40-60MB per stem)\n‚Ä¢ Maximum quality (no compression)\n‚Ä¢ Professional standard\n‚Ä¢ **Best for:** Audio engineers, professional use\n\n**Bottom line:** Choose MP3 unless you have a specific reason to need WAV!"
            },
            {
                keywords: ['vocals only', 'karaoke', 'remove vocals', 'instrumental'],
                question: "How do I create a karaoke track?",
                answer: "üé§ To create a karaoke/instrumental track:\n\n**Option 1: Extract Vocals Only**\n1. Select 'Vocals Only' in the stems dropdown\n2. Process the song\n3. Invert the vocals to subtract from original\n\n**Option 2: Better Method - Extract All Stems**\n1. Select 'All Stems' (default)\n2. After processing, download all stems\n3. Mix Bass + Drums + Other together\n4. You now have a perfect instrumental!\n\n**Option 3: Use the Player**\n1. Process with 'All Stems'\n2. Load in the Player\n3. Mute the vocals track\n4. Play and enjoy!\n\n**Tip:** Option 2 gives you the most flexibility!"
            },
            {
                keywords: ['download', 'get stems', 'save'],
                question: "How do I download my separated stems?",
                answer: "‚¨áÔ∏è **Downloading your stems:**\n\n**From Monitor View:**\n‚Ä¢ Click the download button on any completed job\n‚Ä¢ Downloads as a ZIP file\n‚Ä¢ Contains all stems as separate audio files\n\n**From Library View:**\n‚Ä¢ Click the download icon (‚¨áÔ∏è) next to any song\n‚Ä¢ Same ZIP file format\n\n**Download All:**\n‚Ä¢ Click the üì¶ icon in Monitor view\n‚Ä¢ Downloads all completed jobs at once\n\n**Inside the ZIP:**\n‚Ä¢ bass.mp3 (or .wav)\n‚Ä¢ drums.mp3\n‚Ä¢ vocals.mp3\n‚Ä¢ other.mp3\n‚Ä¢ metadata.json (song info)"
            },
            {
                keywords: ['extract drums', 'drums only', 'only drums'],
                question: "Can I extract just one instrument?",
                answer: "üéØ Yes! You can extract specific stems:\n\n**Available options:**\n‚Ä¢ Vocals Only\n‚Ä¢ Drums Only\n‚Ä¢ Bass Only\n‚Ä¢ Other Only\n‚Ä¢ All Stems (default)\n\n**How to do it:**\n1. In the Add view, find 'Extract Stems' dropdown\n2. Select the stem you want\n3. Process as normal\n4. Only that stem will be in your download\n\n**Note:** Processing time is the same whether you extract one stem or all stems. I recommend extracting all stems for maximum flexibility!"
            },

            // ===== PROCESSING & QUEUE =====
            {
                keywords: ['how long', 'processing time', 'duration', 'wait time'],
                question: "How long does processing take?",
                answer: "‚è±Ô∏è **Processing times vary by model:**\n\n**Fast Processing (mdx_extra):**\n‚Ä¢ 1-2 minutes for a 3-minute song\n\n**Standard Quality (htdemucs):**\n‚Ä¢ 2-3 minutes for a 3-minute song\n\n**High Quality (htdemucs_ft):**\n‚Ä¢ 8-12 minutes for a 3-minute song\n\n**Factors that affect speed:**\n‚Ä¢ Song length (longer = slower)\n‚Ä¢ Server load\n‚Ä¢ Model quality setting\n‚Ä¢ Your CPU/GPU speed\n\n**Tip:** Use Fast Processing for testing, then use High Quality for final results."
            },
            {
                keywords: ['queue', 'monitor', 'progress', 'check status'],
                question: "How do I monitor processing?",
                answer: "üëÅÔ∏è **Monitoring your jobs:**\n\n**Monitor View:**\n‚Ä¢ Shows all active and completed jobs\n‚Ä¢ Real-time progress bars\n‚Ä¢ Detailed status messages\n‚Ä¢ Filter by status (All, Active, Queued, Completed)\n\n**View Badge:**\n‚Ä¢ The Monitor tab shows a badge with active job count\n‚Ä¢ Updates automatically\n\n**What you'll see:**\n‚Ä¢ ‚è≥ Queued - waiting to start\n‚Ä¢ ‚öôÔ∏è Processing - currently running (with % progress)\n‚Ä¢ ‚úÖ Completed - ready to download\n‚Ä¢ ‚ùå Failed - error occurred\n\n**Tip:** Jobs process one at a time in order (FIFO queue)"
            },
            {
                keywords: ['cancel', 'stop', 'abort'],
                question: "Can I cancel a job?",
                answer: "‚ùå Yes, you can cancel queued or processing jobs:\n\n**How to cancel:**\n1. Go to Monitor or Library view\n2. Find the job you want to cancel\n3. Click the cancel button (‚ùå)\n4. Confirm the cancellation\n\n**What happens:**\n‚Ä¢ Job stops immediately\n‚Ä¢ Removed from queue\n‚Ä¢ Partial results deleted\n‚Ä¢ Cannot be resumed\n\n**Note:** You can only cancel jobs that are 'Queued' or 'Processing'. Completed jobs cannot be cancelled (but can be deleted)."
            },
            {
                keywords: ['multiple', 'batch', 'many files', 'several'],
                question: "Can I process multiple files at once?",
                answer: "üìö **Batch processing is supported!**\n\n**For multiple files:**\n1. Upload or add them one at a time\n2. They're automatically added to the queue\n3. They process sequentially (one at a time)\n4. Monitor all jobs in the Monitor view\n\n**For playlists:**\n‚Ä¢ Paste a YouTube playlist URL\n‚Ä¢ All videos are queued automatically\n‚Ä¢ Process one by one\n\n**Why sequential?**\n‚Ä¢ Prevents system overload\n‚Ä¢ Better quality results\n‚Ä¢ Predictable processing times\n\n**Tip:** Use playlists or add multiple files quickly - the queue handles everything!"
            },
            {
                keywords: ['cached', 'cache', 'already processed'],
                question: "What does 'cached' mean?",
                answer: "üíæ **Cached** means the song was already processed!\n\n**What happens:**\n‚Ä¢ System checks if this exact song was processed before\n‚Ä¢ If yes, instantly returns the previous results\n‚Ä¢ No processing needed\n‚Ä¢ Saves time and resources\n\n**How it works:**\n‚Ä¢ Uses a unique hash of the audio content\n‚Ä¢ Same song from YouTube = cached\n‚Ä¢ Re-uploading same file = cached\n‚Ä¢ Different quality/format of same song = may not be cached\n\n**Benefits:**\n‚Ä¢ Instant results (0 seconds)\n‚Ä¢ No waiting in queue\n‚Ä¢ Same quality as original processing"
            },

            // ===== LIBRARY & HISTORY =====
            {
                keywords: ['library', 'history', 'past', 'previous'],
                question: "What is the Library view?",
                answer: "üìö **The Library** shows all your processed songs:\n\n**Features:**\n‚Ä¢ Complete history of all jobs\n‚Ä¢ Searchable and sortable\n‚Ä¢ Shows status, duration, thumbnail\n‚Ä¢ Quick access to download/play\n\n**What you can do:**\n‚Ä¢ ‚¨áÔ∏è Download stems again\n‚Ä¢ üéµ Load into player\n‚Ä¢ üîÑ Reprocess with different settings\n‚Ä¢ üóëÔ∏è Delete old jobs\n\n**Info shown:**\n‚Ä¢ Song title\n‚Ä¢ Artist/channel\n‚Ä¢ Duration\n‚Ä¢ Status (completed, processing, etc.)\n‚Ä¢ Thumbnail (for YouTube videos)\n\n**Tip:** Click on a song thumbnail or title to load it into the Player!"
            },
            {
                keywords: ['delete', 'remove', 'clear'],
                question: "How do I delete old jobs?",
                answer: "üóëÔ∏è **Deleting jobs:**\n\n**Delete individual job:**\n1. Go to Library view\n2. Click the delete button (üóëÔ∏è) next to the song\n3. Confirm deletion\n4. Job and all files are permanently removed\n\n**Clear completed history (Monitor view):**\n1. Go to Monitor view\n2. Click the clear history button (üóëÔ∏è)\n3. Only removes from view, files stay in Library\n\n**Warning:** Deletion is permanent and cannot be undone!\n\n**Tip:** Delete old jobs to free up storage space."
            },
            {
                keywords: ['reprocess', 'process again', 'different model'],
                question: "Can I reprocess a song with different settings?",
                answer: "üîÑ **Yes, you can reprocess any song!**\n\n**How to reprocess:**\n1. Go to Library view\n2. Find the song\n3. Click the refresh button (üîÑ)\n4. Confirm reprocessing\n5. Job is queued with same settings\n\n**Use cases:**\n‚Ä¢ Try a different model (higher quality)\n‚Ä¢ Re-extract with different stem options\n‚Ä¢ Original processing failed\n‚Ä¢ Want better results\n\n**Note:** \n‚Ä¢ Original output is deleted\n‚Ä¢ Uses the same model/settings as before\n‚Ä¢ To change settings, upload/add again\n\n**Tip:** For cached YouTube videos, reprocessing is free!"
            },

            // ===== PLAYER & MIXER =====
            {
                keywords: ['player', 'play', 'listen', 'playback'],
                question: "How does the player work?",
                answer: "üéµ **The Player lets you listen to separated stems!**\n\n**How to use:**\n1. Process a song (wait for completion)\n2. Go to Library view\n3. Click on the song thumbnail or title\n4. Player view opens automatically\n5. Press play!\n\n**Features:**\n‚Ä¢ Play/pause controls\n‚Ä¢ Skip between tracks\n‚Ä¢ Timeline scrubbing\n‚Ä¢ Mixer for each stem\n‚Ä¢ Master volume control\n\n**Mixer features:**\n‚Ä¢ Individual volume for each stem\n‚Ä¢ Pan left/right\n‚Ä¢ Mute/solo buttons\n‚Ä¢ Save mixer settings (auto-saved)\n\n**Tip:** Use mute/solo to isolate specific instruments while listening!"
            },
            {
                keywords: ['mixer', 'volume', 'mute', 'solo'],
                question: "How do I use the mixer?",
                answer: "üéõÔ∏è **Mixer Controls:**\n\n**Access the mixer:**\n1. Load a song in Player view\n2. Click the mixer button (üéõÔ∏è)\n3. Mixer panel appears\n\n**For each stem:**\n‚Ä¢ **Volume knob:** Drag up/down to adjust\n‚Ä¢ **Pan knob:** Drag to pan left/right\n‚Ä¢ **M button:** Mute this stem\n‚Ä¢ **S button:** Solo this stem (mutes all others)\n\n**Master section:**\n‚Ä¢ Controls overall volume\n‚Ä¢ Affects all stems together\n\n**Tips:**\n‚Ä¢ Solo vocals to hear just the singing\n‚Ä¢ Mute vocals for karaoke mode\n‚Ä¢ Pan different instruments for spatial effect\n‚Ä¢ Settings auto-save for each song\n\n**How to use knobs:** Click and drag UP to increase, DOWN to decrease"
            },
            {
                keywords: ['mute vocals', 'isolate', 'solo drums'],
                question: "How do I isolate specific instruments?",
                answer: "üéØ **Isolating instruments in the Player:**\n\n**Method 1: Solo**\n1. Open the mixer (üéõÔ∏è button)\n2. Click 'S' (Solo) on the instrument you want\n3. All other stems are muted\n4. Perfect for focused listening\n\n**Method 2: Mute**\n1. Open the mixer\n2. Click 'M' (Mute) on instruments you don't want\n3. Leave target instrument unmuted\n4. More manual but more flexible\n\n**Examples:**\n‚Ä¢ Solo vocals = Click 'S' on vocals stem\n‚Ä¢ Karaoke = Click 'M' on vocals stem\n‚Ä¢ Just rhythm = Mute vocals and other\n\n**Tip:** Solo is faster for isolating; mute is better for creating custom mixes!"
            },
            {
                keywords: ['pan', 'panning', 'stereo', 'left right'],
                question: "What does the pan control do?",
                answer: "‚ÜîÔ∏è **Panning controls stereo positioning:**\n\n**What it does:**\n‚Ä¢ **Center (C):** Sound equally in both ears\n‚Ä¢ **Left (L):** Sound more in left ear/speaker\n‚Ä¢ **Right (R):** Sound more in right ear/speaker\n\n**How to use:**\n1. Open mixer in Player\n2. Find the 'Pan' knob for any stem\n3. Drag up/down to adjust\n4. Watch the value change (L, C, R)\n\n**Creative uses:**\n‚Ä¢ Pan drums to one side, bass to other\n‚Ä¢ Create wide stereo field\n‚Ä¢ Emphasize specific instruments\n‚Ä¢ Make space in the mix\n\n**Tip:** Most stems sound best at center (C), but experiment!"
            },
            {
                keywords: ['navigate', 'skip', 'prev next', 'previous next'],
                question: "How do I navigate between songs in the player?",
                answer: "‚è≠Ô∏è **Player Navigation:**\n\n**Transport controls:**\n‚Ä¢ ‚èÆ **Prev Track:** Load previous song in library\n‚Ä¢ ‚è™ **Restart:** Jump to beginning of current song\n‚Ä¢ ‚ñ∂Ô∏è/‚è∏ **Play/Pause:** Toggle playback\n‚Ä¢ ‚è≠ **Next Track:** Load next song in library\n‚Ä¢ üéõÔ∏è **Mixer:** Show/hide mixer controls\n\n**Timeline:**\n‚Ä¢ Click anywhere on timeline to jump\n‚Ä¢ Drag while playing to scrub\n\n**Tip:** Prev/Next buttons cycle through your Library, so you can listen to all your separated tracks in sequence!"
            },

            // ===== TECHNICAL & TROUBLESHOOTING =====
            {
                keywords: ['slow', 'taking long', 'stuck', 'not moving'],
                question: "Processing is very slow. What can I do?",
                answer: "üêå **Troubleshooting slow processing:**\n\n**Normal processing times:**\n‚Ä¢ Fast: 1-2 min\n‚Ä¢ Standard: 2-3 min\n‚Ä¢ High Quality: 8-12 min\n\n**If it's slower than this:**\n\n1. **Check queue position**\n   ‚Ä¢ Multiple jobs? They process one at a time\n   ‚Ä¢ Check Monitor view for your position\n\n2. **Try a faster model**\n   ‚Ä¢ Switch to 'Fast Processing' (mdx_extra)\n\n3. **Refresh the page**\n   ‚Ä¢ Progress continues server-side\n   ‚Ä¢ Reconnect by refreshing\n\n4. **Server load**\n   ‚Ä¢ Peak times may be slower\n   ‚Ä¢ Try again later\n\n5. **Very long songs**\n   ‚Ä¢ 10+ minute songs take proportionally longer\n\n**Still stuck? Refresh the page or try canceling and restarting.**"
            },
            {
                keywords: ['error', 'failed', 'not working'],
                question: "My job failed. What should I do?",
                answer: "‚ùå **Job failure troubleshooting:**\n\n**Common causes:**\n\n1. **File format issue**\n   ‚Ä¢ Try converting to MP3 first\n   ‚Ä¢ Some rare formats may not work\n\n2. **File too large**\n   ‚Ä¢ Max upload is 100MB\n   ‚Ä¢ Try shorter clip or use YouTube URL\n\n3. **Corrupted file**\n   ‚Ä¢ Re-download the original\n   ‚Ä¢ Try a different source\n\n4. **YouTube video issues**\n   ‚Ä¢ Video might be private/deleted\n   ‚Ä¢ Age-restricted videos may fail\n   ‚Ä¢ Try different video\n\n5. **Server timeout**\n   ‚Ä¢ Very long songs may timeout\n   ‚Ä¢ Try shorter clip\n\n**What to do:**\n‚Ä¢ Check error message in Monitor view\n‚Ä¢ Try uploading again\n‚Ä¢ Try different file format\n‚Ä¢ Contact support if persists"
            },
            {
                keywords: ['quality', 'sounds bad', 'artifacts', 'distorted'],
                question: "The separated audio has artifacts or sounds bad",
                answer: "üîä **Improving separation quality:**\n\n**Try these solutions:**\n\n1. **Use a better model**\n   ‚Ä¢ Switch to 'High Quality (htdemucs_ft)'\n   ‚Ä¢ Worth the extra processing time\n\n2. **Check input quality**\n   ‚Ä¢ Use highest quality source file\n   ‚Ä¢ Avoid low bitrate MP3s\n   ‚Ä¢ YouTube videos vary in quality\n\n3. **Understand limitations**\n   ‚Ä¢ AI separation isn't perfect\n   ‚Ä¢ Some songs separate better than others\n   ‚Ä¢ Complex arrangements are harder\n\n4. **Genre matters**\n   ‚Ä¢ Rock/pop: Usually excellent\n   ‚Ä¢ Electronic/heavy processing: May have artifacts\n   ‚Ä¢ Classical/jazz: Can be challenging\n\n**Tips:**\n‚Ä¢ Start with high quality input\n‚Ä¢ Use htdemucs_ft for best results\n‚Ä¢ Some 'bleed' between stems is normal"
            },
            {
                keywords: ['websocket', 'progress not updating', 'connection'],
                question: "Progress updates aren't showing",
                answer: "üîå **Progress tracking issues:**\n\n**Quick fixes:**\n\n1. **Refresh the page**\n   ‚Ä¢ Processing continues server-side\n   ‚Ä¢ Progress will update after refresh\n\n2. **Check Monitor view**\n   ‚Ä¢ Go to Monitor tab\n   ‚Ä¢ Click refresh button (üîÑ)\n\n3. **Check internet connection**\n   ‚Ä¢ WebSocket requires stable connection\n   ‚Ä¢ Try switching networks\n\n4. **Clear browser cache**\n   ‚Ä¢ Force refresh (Ctrl+Shift+R or Cmd+Shift+R)\n\n5. **Check firewall**\n   ‚Ä¢ Some corporate networks block WebSockets\n\n**How it works:**\n‚Ä¢ Real-time updates via WebSocket\n‚Ä¢ Falls back to periodic checks\n‚Ä¢ Your job is still processing even if updates stop\n\n**Tip:** Even if progress doesn't update, check back in a few minutes - your job is still running!"
            },
            {
                keywords: ['browser', 'compatibility', 'which browser'],
                question: "Which browsers are supported?",
                answer: "üåê **Browser Compatibility:**\n\n**Fully Supported:**\n‚Ä¢ ‚úÖ Chrome/Chromium (recommended)\n‚Ä¢ ‚úÖ Firefox\n‚Ä¢ ‚úÖ Safari (macOS/iOS)\n‚Ä¢ ‚úÖ Edge (Chromium-based)\n\n**Features requiring modern browser:**\n‚Ä¢ WebSocket for real-time progress\n‚Ä¢ Web Audio API for player/mixer\n‚Ä¢ File upload API\n‚Ä¢ Tone.js for audio playback\n\n**Recommended:**\n‚Ä¢ **Chrome** or **Firefox** for best experience\n‚Ä¢ Keep browser updated\n‚Ä¢ Enable JavaScript\n‚Ä¢ Allow cookies (for settings)\n\n**Mobile:**\n‚Ä¢ Works on mobile browsers\n‚Ä¢ Player may have limited features\n‚Ä¢ Upload may be slower\n\n**Tip:** For best experience, use latest Chrome or Firefox on desktop!"
            },

            // ===== ADVANCED FEATURES =====
            {
                keywords: ['metadata', 'information', 'song info'],
                question: "Is song metadata preserved?",
                answer: "üìã **Metadata Handling:**\n\n**For YouTube videos:**\n‚Ä¢ ‚úÖ Title\n‚Ä¢ ‚úÖ Artist/Channel name\n‚Ä¢ ‚úÖ Duration\n‚Ä¢ ‚úÖ Thumbnail image\n‚Ä¢ ‚úÖ Description\n‚Ä¢ ‚úÖ Upload date\n\n**For uploaded files:**\n‚Ä¢ ‚úÖ Filename\n‚Ä¢ ‚úÖ Duration (detected)\n‚Ä¢ ‚ùå ID3 tags (not read)\n\n**Where it's used:**\n‚Ä¢ Library view (shows all metadata)\n‚Ä¢ Player view (displays title/artist)\n‚Ä¢ Download ZIP (metadata.json file)\n\n**metadata.json includes:**\n```json\n{\n  \"title\": \"Song Name\",\n  \"artist\": \"Artist Name\",\n  \"model\": \"htdemucs_ft\",\n  \"duration\": 245,\n  \"format\": \"mp3\"\n}\n```"
            },
            {
                keywords: ['api', 'integration', 'automate'],
                question: "Is there an API for automation?",
                answer: "üîß **API Endpoints:**\n\nYes! The backend has a REST API:\n\n**Main endpoints:**\n‚Ä¢ `POST /api/upload` - Upload audio file\n‚Ä¢ `POST /api/youtube` - Process YouTube URL\n‚Ä¢ `GET /api/status/{job_id}` - Check job status\n‚Ä¢ `GET /api/jobs` - List all jobs\n‚Ä¢ `GET /api/download/{job_id}` - Download stems\n‚Ä¢ `POST /api/cancel/{job_id}` - Cancel job\n‚Ä¢ `DELETE /api/jobs/{job_id}` - Delete job\n\n**WebSocket:**\n‚Ä¢ `/progress` namespace\n‚Ä¢ Real-time progress updates\n‚Ä¢ Subscribe to specific jobs\n\n**Documentation:**\n‚Ä¢ Check server/README.md for details\n‚Ä¢ API returns JSON responses\n‚Ä¢ Standard HTTP status codes\n\n**Tip:** You can build custom tools/scripts using these endpoints!"
            },
            {
                keywords: ['storage', 'space', 'disk space'],
                question: "How much storage do stems use?",
                answer: "üíæ **Storage Requirements:**\n\n**Per song (4 stems):**\n\n**MP3 output (320 kbps):**\n‚Ä¢ ~10-20 MB per stem\n‚Ä¢ Total: ~40-80 MB per song\n‚Ä¢ **Recommended for most users**\n\n**WAV output (uncompressed):**\n‚Ä¢ ~40-60 MB per stem\n‚Ä¢ Total: ~160-240 MB per song\n‚Ä¢ For professional/archival use\n\n**6-stem model:**\n‚Ä¢ Add ~50% more storage\n\n**Tips to save space:**\n‚Ä¢ Use MP3 output format\n‚Ä¢ Delete old jobs you don't need\n‚Ä¢ Download and delete from server\n‚Ä¢ Process on-demand instead of batch\n\n**Example:** 100 songs in MP3 = ~5-8 GB"
            },
            {
                keywords: ['offline', 'local', 'privacy'],
                question: "Does this work offline? Is my data private?",
                answer: "üîí **Privacy & Offline:**\n\n**Privacy:**\n‚Ä¢ Audio is processed on the server\n‚Ä¢ Files stored temporarily during processing\n‚Ä¢ You can delete files anytime\n‚Ä¢ No data shared with third parties\n\n**Offline:**\n‚Ä¢ ‚ùå Requires internet connection\n‚Ä¢ Processing happens server-side\n‚Ä¢ Downloads work normally\n\n**Your data:**\n‚Ä¢ Uploaded files: Stored temporarily\n‚Ä¢ YouTube: Only audio downloaded\n‚Ä¢ Results: Kept until you delete\n‚Ä¢ Metadata: Stored in Library\n\n**Self-hosting:**\n‚Ä¢ This app can be self-hosted\n‚Ä¢ Full control over your data\n‚Ä¢ See deployment docs\n\n**Tip:** For maximum privacy, self-host or process files locally using the command-line Demucs tool!"
            },

            // ===== TIPS & TRICKS =====
            {
                keywords: ['tips', 'tricks', 'best practices', 'advice'],
                question: "What are some tips and tricks?",
                answer: "üí° **Pro Tips:**\n\n**For best quality:**\n1. Use highest quality source files\n2. Choose 'High Quality' model (htdemucs_ft)\n3. Use WAV output for archival\n\n**For speed:**\n1. Use 'Fast Processing' model\n2. Extract only the stem you need\n3. Use YouTube URLs (no upload time)\n\n**Workflow tips:**\n1. Process multiple songs via playlist\n2. Use Library view to organize\n3. Load songs in Player to preview\n4. Export mixer settings for consistent sound\n\n**Creative uses:**\n1. Create practice tracks (mute vocals)\n2. Make remixes (isolate stems)\n3. Study arrangements (solo instruments)\n4. Create stems for live performance\n\n**Shortcuts:**\n‚Ä¢ Click thumbnail to quick-load in Player\n‚Ä¢ Use üì¶ to download all completed jobs\n‚Ä¢ Refresh button (üîÑ) for instant updates"
            },
            {
                keywords: ['use cases', 'what can i do', 'examples'],
                question: "What can I do with separated stems?",
                answer: "üé® **Creative Use Cases:**\n\n**Music Production:**\n‚Ä¢ üéß Create remixes\n‚Ä¢ üîÑ Mashups with other songs\n‚Ä¢ üéπ Add your own instruments\n‚Ä¢ üéöÔ∏è Better mixing/mastering\n\n**Practice & Learning:**\n‚Ä¢ üé∏ Practice with isolated backing tracks\n‚Ä¢ üéµ Study arrangements and production\n‚Ä¢ üé§ Learn vocals without music\n‚Ä¢ ü•Å Drum along to isolated tracks\n\n**Performance:**\n‚Ä¢ üé§ Karaoke tracks (remove vocals)\n‚Ä¢ üé∏ Live backing tracks\n‚Ä¢ üéº Cover songs with custom arrangements\n‚Ä¢ üé™ DJ sets with isolated elements\n\n**Content Creation:**\n‚Ä¢ üé¨ Video background music\n‚Ä¢ üìπ Podcast intros\n‚Ä¢ üéÆ Game streaming overlays\n‚Ä¢ üì± Social media content\n\n**Fun stuff:**\n‚Ä¢ ü§™ Create acapella versions\n‚Ä¢ üéµ Make 'only drums' memes\n‚Ä¢ üîä Hear your favorite songs differently"
            },
            {
                keywords: ['copyright', 'legal', 'licensing'],
                question: "Is using Demucs for stem separation legal?",
                answer: "‚öñÔ∏è **Legal & Copyright:**\n\n**The tool itself:**\n‚Ä¢ ‚úÖ Demucs is open-source (MIT license)\n‚Ä¢ ‚úÖ Legal to use for separation\n‚Ä¢ ‚úÖ No restrictions on the software\n\n**The content:**\n‚Ä¢ ‚ö†Ô∏è You must own rights to the audio\n‚Ä¢ ‚ö†Ô∏è Or have permission to process it\n‚Ä¢ ‚ö†Ô∏è Copyright still applies to the music\n\n**Legal uses:**\n‚Ä¢ ‚úÖ Your own music\n‚Ä¢ ‚úÖ Royalty-free/Creative Commons tracks\n‚Ä¢ ‚úÖ Personal practice/education\n‚Ä¢ ‚úÖ With explicit permission\n\n**Questionable uses:**\n‚Ä¢ ‚ö†Ô∏è Copyrighted songs for performance\n‚Ä¢ ‚ö†Ô∏è Commercial use without license\n‚Ä¢ ‚ö†Ô∏è Distribution of separated stems\n\n**Disclaimer:**\n‚Ä¢ This is not legal advice\n‚Ä¢ Check your local laws\n‚Ä¢ Respect artists' rights\n‚Ä¢ When in doubt, get permission\n\n**Tip:** Stick to your own music or licensed content!"
            },

            // ===== COMPARISON & ALTERNATIVES =====
            {
                keywords: ['vs', 'compared', 'alternative', 'better than'],
                question: "How does Demucs compare to other tools?",
                answer: "‚öñÔ∏è **Demucs vs Alternatives:**\n\n**Demucs Advantages:**\n‚Ä¢ ‚úÖ State-of-the-art quality\n‚Ä¢ ‚úÖ Open source & free\n‚Ä¢ ‚úÖ Active development\n‚Ä¢ ‚úÖ Multiple models\n‚Ä¢ ‚úÖ Research-backed (Facebook/Meta)\n\n**Competitors:**\n\n**Spleeter (Deezer):**\n‚Ä¢ Older technology\n‚Ä¢ Faster but lower quality\n‚Ä¢ Good for quick previews\n\n**UVR (Ultimate Vocal Remover):**\n‚Ä¢ GUI application\n‚Ä¢ Uses multiple models (including Demucs)\n‚Ä¢ More features but steeper learning curve\n\n**Online services:**\n‚Ä¢ Often use Demucs under the hood\n‚Ä¢ More convenient\n‚Ä¢ Usually paid/limited\n\n**Why Demucs wins:**\n‚Ä¢ Best quality available\n‚Ä¢ Free and open\n‚Ä¢ Self-hostable\n‚Ä¢ Well-documented\n\n**This web app adds:**\n‚Ä¢ Easy-to-use interface\n‚Ä¢ YouTube integration\n‚Ä¢ Queue management\n‚Ä¢ Built-in player"
            },

            // ===== MISC & HELP =====
            {
                keywords: ['support', 'contact', 'bug', 'issue'],
                question: "How do I report bugs or get help?",
                answer: "üÜò **Getting Help:**\n\n**In-app help:**\n1. This chatbot (you're using it!)\n2. Check error messages in Monitor view\n3. Review documentation\n\n**For bugs:**\n‚Ä¢ Check browser console (F12)\n‚Ä¢ Note the error message\n‚Ä¢ Try refreshing the page\n‚Ä¢ Report via GitHub issues\n\n**Documentation:**\n‚Ä¢ README.md - Basic usage\n‚Ä¢ TROUBLESHOOTING.md - Common issues\n‚Ä¢ QUICKREF.md - Quick reference\n‚Ä¢ server/README.md - API docs\n\n**Community:**\n‚Ä¢ GitHub discussions\n‚Ä¢ Check existing issues\n‚Ä¢ Contribute improvements\n\n**What to include in bug reports:**\n‚Ä¢ Browser and version\n‚Ä¢ Steps to reproduce\n‚Ä¢ Error messages\n‚Ä¢ Job ID (if applicable)\n\n**Tip:** Most issues can be solved by refreshing the page or trying a different model!"
            },
            {
                keywords: ['contribute', 'development', 'code'],
                question: "Can I contribute to this project?",
                answer: "ü§ù **Contributing:**\n\n**Ways to contribute:**\n\n**Code:**\n‚Ä¢ Fix bugs\n‚Ä¢ Add features\n‚Ä¢ Improve UI/UX\n‚Ä¢ Optimize performance\n\n**Documentation:**\n‚Ä¢ Improve README\n‚Ä¢ Add tutorials\n‚Ä¢ Translate to other languages\n‚Ä¢ Update troubleshooting guide\n\n**Testing:**\n‚Ä¢ Report bugs\n‚Ä¢ Test new features\n‚Ä¢ Suggest improvements\n\n**Getting started:**\n1. Fork the repository\n2. Read DEVELOPMENT.md\n3. Make your changes\n4. Submit a pull request\n\n**Tech stack:**\n‚Ä¢ Backend: Python (Flask)\n‚Ä¢ Frontend: Vanilla JavaScript\n‚Ä¢ Processing: Demucs\n‚Ä¢ Audio: Tone.js\n\n**Tip:** Check GitHub issues for 'good first issue' labels!"
            },
            {
                keywords: ['thank', 'thanks', 'awesome', 'great'],
                question: "Thank you!",
                answer: "üéâ You're welcome! I'm glad I could help!\n\nRemember:\n‚Ä¢ Start with 'Standard Quality' for testing\n‚Ä¢ Use 'High Quality' for important projects\n‚Ä¢ The Player is great for previewing stems\n‚Ä¢ YouTube playlists can process in batch\n\nEnjoy separating your audio! Feel free to ask if you have any other questions. üéµ"
            },
            {
                keywords: ['commands', 'what can you do', 'help topics'],
                question: "What topics can you help with?",
                answer: "üéØ **I can help with:**\n\n**Getting Started:**\n‚Ä¢ How to upload files\n‚Ä¢ Using YouTube URLs\n‚Ä¢ Choosing models\n\n**Processing:**\n‚Ä¢ Understanding stems\n‚Ä¢ Output formats\n‚Ä¢ Queue management\n‚Ä¢ Processing times\n\n**Features:**\n‚Ä¢ Player and mixer\n‚Ä¢ Library management\n‚Ä¢ Batch processing\n\n**Troubleshooting:**\n‚Ä¢ Failed jobs\n‚Ä¢ Slow processing\n‚Ä¢ Quality issues\n\n**Advanced:**\n‚Ä¢ API usage\n‚Ä¢ Best practices\n‚Ä¢ Tips and tricks\n\n**Just ask me anything like:**\n‚Ä¢ 'How do I upload a file?'\n‚Ä¢ 'Which model is best?'\n‚Ä¢ 'How to create karaoke?'\n‚Ä¢ 'What are stems?'\n\nI'm here to help! üéµ"
            }
        ];
    }

    findBestMatch(userMessage) {
        const lowerMessage = userMessage.toLowerCase();
        const words = lowerMessage.split(/\s+/);
        
        let bestMatch = null;
        let bestScore = 0;

        for (const item of this.knowledgeBase) {
            let score = 0;
            
            // Check each keyword against the message
            for (const keyword of item.keywords) {
                if (lowerMessage.includes(keyword.toLowerCase())) {
                    // Longer keyword matches score higher
                    score += keyword.split(' ').length;
                }
            }

            // Boost score if multiple keywords match
            const matchCount = item.keywords.filter(k => 
                lowerMessage.includes(k.toLowerCase())
            ).length;
            score *= (1 + matchCount * 0.5);

            if (score > bestScore) {
                bestScore = score;
                bestMatch = item;
            }
        }

        // If no good match found, return default help
        if (bestScore < 1) {
            return this.knowledgeBase[0]; // Return first (hello/help) item
        }

        return bestMatch;
    }

    chat(userMessage) {
        const match = this.findBestMatch(userMessage);
        
        this.chatHistory.push({
            type: 'user',
            message: userMessage,
            timestamp: new Date()
        });

        this.chatHistory.push({
            type: 'bot',
            message: match.answer,
            timestamp: new Date()
        });

        return match.answer;
    }

    getSuggestions() {
        // Return random suggestions
        const suggestions = [
            "How do I upload a file?",
            "Which model should I use?",
            "How do I create karaoke tracks?",
            "What are stems?",
            "How long does processing take?",
            "Can I use YouTube URLs?",
            "How do I use the mixer?",
            "What does the 6-stem model do?",
            "Tips and tricks?"
        ];
        
        // Return 3 random suggestions
        return suggestions.sort(() => Math.random() - 0.5).slice(0, 3);
    }

    clearHistory() {
        this.chatHistory = [];
    }
}

// Export for use in app
window.DemucsChatbot = DemucsChatbot;

